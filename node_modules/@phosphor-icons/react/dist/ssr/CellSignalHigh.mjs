var m = Object.defineProperty, f = Object.defineProperties;
var g = Object.getOwnPropertyDescriptors;
var o = Object.getOwnPropertySymbols;
var p = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
var t = (r, e, i) => e in r ? m(r, e, { enumerable: !0, configurable: !0, writable: !0, value: i }) : r[e] = i, a = (r, e) => {
  for (var i in e || (e = {}))
    p.call(e, i) && t(r, i, e[i]);
  if (o)
    for (var i of o(e))
      n.call(e, i) && t(r, i, e[i]);
  return r;
}, l = (r, e) => f(r, g(e));
import s, { forwardRef as S } from "react";
import c from "../lib/SSRBase.mjs";
import h from "../defs/CellSignalHigh.mjs";
const R = S((r, e) => /* @__PURE__ */ s.createElement(c, l(a({ ref: e }, r), { weights: h })));
R.displayName = "CellSignalHigh";
export {
  R as CellSignalHigh
};
