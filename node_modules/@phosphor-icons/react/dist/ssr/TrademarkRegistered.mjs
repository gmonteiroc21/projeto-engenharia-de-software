var d = Object.defineProperty, s = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var p = Object.prototype.hasOwnProperty, R = Object.prototype.propertyIsEnumerable;
var m = (r, e, t) => e in r ? d(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t, o = (r, e) => {
  for (var t in e || (e = {}))
    p.call(e, t) && m(r, t, e[t]);
  if (a)
    for (var t of a(e))
      R.call(e, t) && m(r, t, e[t]);
  return r;
}, i = (r, e) => s(r, f(e));
import c, { forwardRef as g } from "react";
import k from "../lib/SSRBase.mjs";
import l from "../defs/TrademarkRegistered.mjs";
const n = g((r, e) => /* @__PURE__ */ c.createElement(k, i(o({ ref: e }, r), { weights: l })));
n.displayName = "TrademarkRegistered";
export {
  n as TrademarkRegistered
};
