var n = Object.defineProperty, a = Object.defineProperties;
var p = Object.getOwnPropertyDescriptors;
var r = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, s = Object.prototype.propertyIsEnumerable;
var i = (e, t, o) => t in e ? n(e, t, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[t] = o, m = (e, t) => {
  for (var o in t || (t = {}))
    c.call(t, o) && i(e, o, t[o]);
  if (r)
    for (var o of r(t))
      s.call(t, o) && i(e, o, t[o]);
  return e;
}, f = (e, t) => a(e, p(t));
import y, { forwardRef as I } from "react";
import d from "../lib/IconBase.mjs";
import l from "../defs/Infinity.mjs";
const w = I((e, t) => /* @__PURE__ */ y.createElement(d, f(m({ ref: t }, e), { weights: l })));
w.displayName = "Infinity";
export {
  w as Infinity
};
